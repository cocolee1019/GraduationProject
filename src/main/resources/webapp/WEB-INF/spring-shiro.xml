<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	
	<!--开启shiro的注解-->
    <bean id="advisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
        <property name="proxyTargetClass" value="true"></property>
    </bean>
    
    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="graduationProject.hngxy.security.CheckOutThePasswd">
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>
    
	<!-- Realm实现 -->
    <bean id="userRealm" class="graduationProject.hngxy.security.UserRealm">
     	<property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

	<!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.ServletContainerSessionManager"></bean>
	
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm"></property>
		<property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
	</bean>
    
	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter"
		class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/home" />
		<property name="unauthorizedUrl" value="/" />
		<property name="filters">
			<util:map>
<!-- 				<entry key="authc" value-ref="formAuthenticationFilter" /> -->
				<entry key="logout" value-ref="logoutFilter" />
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				<!-- /attachment/** = anon
				/ext/** = anon
				/druid/** = anon
				/template/** = anon
				/theme/** = anon
				/upload/** = anon
				/favicon.ico = anon
				/loginValidateCode = anon
				/register** = anon
				/user/registing = anon
				/findPassword = anon
				/user/findPassword = anon
				/user/getPassword/** = anon
				/user/resetPassword = anon
				/user/findresending = anon
				/user/displayActivationCode = anon
				/user/registerAgreement = anon
				/user/resending = anon
				/user/activation/** = anon
				/user/activeUser/** = anon
				/user/perfectUser/** = anon
				/shop/ali1688AuthorizaCallback** = anon
				/shop/aliexpressAuthorizeComplete** = anon
				/user/emalitrue/** = anon
				/format** = anon
				/common/setLanguage/** = anon
				/common/activeTest** = anon
				/incitecode/checkInbiteCodeExists/** = anon
				/billing/alipayAsyncNotify = anon
				/billing/alipaySyncNotify = anon
				/shop/ebayAuthorizaCallback = anon
				/shop/aliexpressAuthorizaCallback = anon-->
				/js/** = anon
				/css/** = anon
				/login = authc
				/home = authc
				/logout = logout
				/** = user
			</value>
		</property>
	</bean>
    
    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
     	<property name="redirectUrl" value="/login" />
	</bean>
</beans>